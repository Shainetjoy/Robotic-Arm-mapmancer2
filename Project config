First, control a single servo motor using a joystick. The joystick‚Äôs analog values are read by the master Arduino, mapped to servo angles 
(0‚Äì180), and then sent wirelessly via Bluetooth (HC-05/HC-06) to the slave Arduino, which receives the data and moves the servo accordingly.

How it Works
_____________________________________________________
           * Joystick ‚Üí Arduino (Analog Input)
            
           * Joystick gives analog values (0‚Äì1023).
            
           * Arduino ‚Üí Bluetooth (Serial TX)
            
           * Arduino reads joystick position and sends the mapped value (0‚Äì180) through Bluetooth.
            
           * Bluetooth ‚Üí Another Arduino (or same Arduino + phone app)
            
           * The receiver reads the value and writes it to the servo.

Connections

1. Transmitter Arduino (Joystick + Bluetooth HC-05/06)
_____________________________________________________________________
         * Joystick X-axis ‚Üí A0
          
         * Joystick VCC ‚Üí 5V
          
         * Joystick GND ‚Üí GND
          
         * HC-05 TX ‚Üí Arduino RX (pin 0)
          
         * HC-05 RX ‚Üí Arduino TX (pin 1) (‚ö†Ô∏è use voltage divider: 1K + 2K resistors, since Arduino TX = 5V but HC-05 RX expects 3.3V)
          
         * HC-05 VCC ‚Üí 5V
          
         * HC-05 GND ‚Üí GND

2. Receiver Arduino (Servo + Bluetooth HC-05/06)
______________________________________________________________________
         * Servo Signal ‚Üí Pin 9
          
         * Servo VCC ‚Üí 5V (‚ö†Ô∏è if using bigger servo, use external power supply)
          
         * Servo GND ‚Üí GND
          
         * HC-05 TX ‚Üí Arduino RX (pin 0)
          
         * HC-05 RX ‚Üí Arduino TX (pin 1) (again with voltage divider)
          
         * HC-05 VCC ‚Üí 5V
          
         * HC-05 GND ‚Üí GND

From the project repository, collect the code sketch Transmitter-Code1 and upload it to the transmitter-side Arduino.
From the project repository, collect the code sketch Receiver Code1 and upload it to the Receiver-side Arduino.
_____________________________________________________________________________________________________________________________________________________________________________________________________________________
Configure the joystick so its X-axis controls Servo 1, and its Y-axis controls both Servo 2 and Servo 3 together, allowing the transmitter 
to send two values (X and Y) for the receiver to control three servos


Connections (Receiver Side)
__________________________________________
         * ServoX ‚Üí Pin 9
        
         * ServoY1 ‚Üí Pin 10
        
         * ServoY2 ‚Üí Pin 11
        
         * All servo VCC ‚Üí 5V (or external power if bigger servos)
        
         * All servo GND ‚Üí Arduino GND
        
         * Bluetooth HC-05 TX ‚Üí Arduino RX (pin 0)
        
         * Bluetooth HC-05 RX ‚Üí Arduino TX (pin 1, via voltage divider)
         
‚ö†Ô∏è Important Notes

      If you use small SG90 servos, Arduino‚Äôs 5V can power up to 2‚Äì3.
      
      If you use bigger servos (MG995, MG996R, etc.), use an external 5‚Äì6V power supply (with common ground to Arduino).
      
      The marker byte (255) ensures that the receiver always syncs correctly, even if a byte is lost.


Servo on Pin 9 ‚Üí Joystick X

Servo on Pin 10 ‚Üí Joystick Y

Servo on Pin 11 ‚Üí Joystick Y



From the project repository, collect the code sketch Transmitter-Code2 and upload it to the transmitter-side Arduino.
From the project repository, collect the code sketch Receiver Code2 and upload it to the Receiver-side Arduino.

Joystick Pinout
      
      GND ‚Üí Ground
      
      +5V (VCC) ‚Üí Power supply (3.3V or 5V depending on module, but Arduino 5V is fine)
      
      VRx ‚Üí X-axis analog output ‚Üí connect to A0
      
      VRy ‚Üí Y-axis analog output ‚Üí connect to A1

SW ‚Üí Switch (digital output when joystick pressed down) ‚Üí connect to any digital pin (optional, if you want button function)

üîπ Arduino Connection Example
      
      Joystick GND ‚Üí Arduino GND
      
      Joystick VCC ‚Üí Arduino 5V
      
      Joystick VRx ‚Üí Arduino A0
      
      Joystick VRy ‚Üí Arduino A1

Joystick SW ‚Üí Arduino D2 (optional, use pinMode(2, INPUT_PULLUP); to read press)

üîπ How it works

      When centered ‚Üí VRx ‚âà 512, VRy ‚âà 512
      
      Move left ‚Üí VRx decreases (towards 0)
      
      Move right ‚Üí VRx increases (towards 1023)
      
      Move forward ‚Üí VRy increases (towards 1023)
      
      Move backward ‚Üí VRy decreases (towards 0)
      
      Press joystick ‚Üí SW outputs LOW (0V)
